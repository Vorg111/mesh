<?php
    require "libs/rb.php";
    $token = '6488989522:AAGsTDXZka5WbueA5Re-gdqtHPNi36OorA8';
    function SubErase($string, $start_in, $end_in) {
        $start = strpos($string, $start_in);
        if ($start !== false) {
            $start += strlen($start_in);
            
            $end = strpos($string, $end_in, $start);
            
            if ($end !== false) {
                $substring = substr($string, $start, $end - $start);
                return $substring;
            } else {
                return "–°—Ç—Ä–æ–∫–∞ ' –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º:' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.";
            }
        } else {
            return "–°—Ç—Ä–æ–∫–∞ 'chat id: ' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.";
        }
        return $str;
    }
    
    // –ü–æ–ª—É—á–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
    R::setup( 'mysql:host=localhost;dbname=u1706092_accountpp',
        'u1706092_default', '03CAL1bI8ybTqhA7' );
        
    $userId = $_GET['chid'];
        
    if (R::findOne('meshbotusers', 'tg_id = ?', array($userId))) {
        $user = R::findOne('meshbotusers', 'tg_id = ?', array($userId));
        if (!isset($_GET['categ'])) {
            $message ="üç± –ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è —Ä–∞–∑–±–∏—Ç–æ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∏–∂–µ –∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ price-–ª–∏—Å—Ç —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.";
            $keyboard = [
                "inline_keyboard" => [
                    [["text" => "ü•® –í—ã–ø–µ—á–∫–∞", "callback_data" => "mn.bakery."], ["text" => "ü•ó –°–∞–ª–∞—Ç—ã", "callback_data" => "mn.salats."]],
                    [["text" => "ü•™ –°–µ–Ω–¥–≤–∏—á–∏", "callback_data" => "mn.sandwitch."], ["text" => "üçä –§—Ä—É–∫—Ç—ã", "callback_data" => "mn.fruits."]],
                    [["text" => "üç™ –ü–µ—á–µ–Ω—å–µ", "callback_data" => "mn.cookies."], ["text" => "üßÉ –ù–∞–ø–∏—Ç–∫–∏", "callback_data" => "mn.water."]],
                    [["text" => "üç° –ú–∞—Ä–º–µ–ª–∞–¥", "callback_data" => "mn.marmelad."], ["text" => "üç¨ –ö–æ–Ω—Ñ–µ—Ç—ã", "callback_data" => "mn.candies."]],
                    [["text" => "üè∑ –ê–∫—Ü–∏—è", "callback_data" => "mn.sale-off."], ["text" => "‚ö´Ô∏è –î—Ä—É–≥–æ–µ", "callback_data" => "mn.other."]],
                ],
            ];
            if (isset($_GET['mid'])) {
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
                return;
            }
            sendMessage($userId, $message, json_encode($keyboard));
        }
        else {
            if (isset(json_decode($user -> menu, true)['menu'])) {
                $result2 = json_decode($user -> menu, true);
            }
            else {
                $url = "https://school.mos.ru/api/family/mobile/v1/menu/buffet/?date=".date("Y-m-d")."&contract_id=1";
                    
                $ch = curl_init($url);
                curl_setopt($ch, CURLOPT_POST, false);
                curl_setopt($ch, CURLOPT_HEADER, false);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    "Auth-Token:".$user -> token,
                    "X-Mes-Subsystem:familymp"
                ));
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                $result2 = json_decode(curl_exec($ch), true);
                
                if (str_contains($result2['message'], "–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è —Ä–∞–±–æ—Ç—ã –≤ –≠–ñ–î –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í–æ–π–¥–∏—Ç–µ –≤ –≠–ñ–î –∑–∞–Ω–æ–≤–æ")) {
                    if (isset($_GET['mid'])) {
                        deleteMessage($userId, $_GET['mid']);
                    }
                    file_get_contents("https://vorg.site/meshdnevnik_bot/relog.php?chid=".$userId);
                    return;
                }
            }
            $message = "–í–æ—Ç –≤–∞—à–µ –º–µ–Ω—é –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏";
            $keyboard = [
                "inline_keyboard" => [
                    [["text" => "< –ù–∞–∑–∞–¥", "callback_data" => "mn.home."],],
                ],
            ];
            $smiles = array("üßä", "üçØ", "ü•¢", "üçé", "üç±", "ü•Ñ");
            if ($_GET['categ'] == "bakery") {
                $message = "ü•® ".$message." –≤—ã–ø–µ—á–∫–∞:\n\n";
                $categor = "–í—ã–ø–µ—á–∫–∞";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor)) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "salats") {
                $message = "ü•ó ".$message." —Å–∞–ª–∞—Ç—ã:\n\n";
                $categor = "–°–ê–õ–ê–¢–´";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor)) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "sandwitch") {
                $message = "ü•™ ".$message." —Å–µ–Ω–¥–≤–∏—á–∏:\n\n";
                $categor = "–°–µ–Ω–¥–≤–∏—á–∏";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor)) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "fruits") {
                $message = "üçä ".$message." —Ñ—Ä—É–∫—Ç—ã:\n\n";
                $categor = "–§—Ä—É–∫—Ç—ã";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor) || str_contains($i['group'], "–°—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã")) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "cookies") {
                $message = "üç™ ".$message." –ø–µ—á–µ–Ω—å–µ:\n\n";
                $categor = "–ü–ï–ß–ï–ù–¨–ï";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor)) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "water") {
                $message = "üßÉ ".$message." –Ω–∞–ø–∏—Ç–∫–∏:\n\n";
                $categor = "–ù–∞–ø–∏—Ç–∫–∏";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor) || str_contains($i['group'], "–°–æ–∫–∏") || str_contains($i['group'], "–ö–æ–∫—Ç–µ–π–ª–∏")) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "marmelad") {
                $message = "üç° ".$message." –º–∞—Ä–º–µ–ª–∞–¥:\n\n";
                $categor = "–ú–∞—Ä–º–µ–ª–∞–¥";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor)) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "candies") {
                $message = "üç¨ ".$message." –∫–æ–Ω—Ñ–µ—Ç—ã:\n\n";
                $categor = "–ö–æ–Ω—Ñ–µ—Ç—ã";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor)) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "sale-off") {
                $message = "üè∑ ".$message." –∞–∫—Ü–∏—è:\n\n";
                $categor = "–ê–∫—Ü–∏—è";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (str_contains($i['group'], $categor)) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
            else if ($_GET['categ'] == "other") {
                $message = "‚ö´Ô∏è ".$message." –¥—Ä—É–≥–æ–µ:\n\n";
                foreach ($result2['menu'][0]['items'] as $i) {
                    if (!str_contains($i['group'], "–ê–∫—Ü–∏—è") && !str_contains($i['group'], "–ö–æ–Ω—Ñ–µ—Ç—ã") &&
                    !str_contains($i['group'], "–ú–∞—Ä–º–µ–ª–∞–¥") && !str_contains($i['group'], "–ù–∞–ø–∏—Ç–∫–∏") &&
                    !str_contains($i['group'], "–ü–ï–ß–ï–ù–¨–ï") && !str_contains($i['group'], "–§—Ä—É–∫—Ç—ã") &&
                    !str_contains($i['group'], "–°–µ–Ω–¥–≤–∏—á–∏") && !str_contains($i['group'], "–°–ê–õ–ê–¢–´") &&
                    !str_contains($i['group'], "–í—ã–ø–µ—á–∫–∞") && !str_contains($i['group'], "–°–æ–∫–∏") &&
                    !str_contains($i['group'], "–ö–æ–∫—Ç–µ–π–ª–∏") && !str_contains($i['group'], "–°—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã")) {
                        $message .= "üßä ".$i['name']." - ***".($i['price'] / 100)."‚ÇΩ***\n";
                    }
                }
                editMessage($userId, $_GET['mid'], $message, json_encode($keyboard));
            }
        }
    }
    function sendMessage($chatId, $text, $keyboard, $photo = null) {
        $data = [
            'chat_id' => $chatId,
            'text' => $text,
            'parse_mode' => 'Markdown',
        ];
        if ($keyboard) {
            $data['reply_markup'] = $keyboard;
        }
        if ($photo) {
            $data = [
                'chat_id' => $chatId,
                'caption' => $text,
                'photo' => $photo,
                'parse_mode' => 'Markdown',
            ];
            if ($keyboard) {
                $data['reply_markup'] = $keyboard;
            }
            file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/sendPhoto?' . http_build_query($data));
            return;
        }
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/sendMessage?' . http_build_query($data));
    }
    
    
    function deleteMessage($chatId, $message_id) {
        $data = [
            'chat_id' => $chatId,
            'message_id' => $message_id,
        ];
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/deleteMessage?' . http_build_query($data));
    }
    
    
    function editMessage($chatId, $messageId, $text, $keyboard) {
        $data = [
            'chat_id' => $chatId,
            'message_id' => $messageId,
            'text' => $text,
            'parse_mode' => 'Markdown',
        ];
        if ($keyboard) {
            $data['reply_markup'] = $keyboard;
        }
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/editMessageText?' . http_build_query($data));
    }
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è 
?>   