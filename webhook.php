<?php 
    require "libs/rb.php";
    $token = '6488989522:AAGsTDXZka5WbueA5Re-gdqtHPNi36OorA8';
    
    
    $keyboard = [
        'keyboard' => [
            [['text' => 'üìó –ó–∞–¥–∞–Ω–∏—è'], ['text' => 'üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ'],],
            [['text' => 'üèÖ –û—Ü–µ–Ω–∫–∏'], ['text' => 'üìà –†–µ–π—Ç–∏–Ω–≥'],],
            [['text' => 'ü•ò –ú–µ–Ω—é'], ['text' => 'ü´• –ü–æ–¥–¥–µ—Ä–∂–∫–∞'],],
            [['text' => 'üíæ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ'], ['text' => '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'],],
            [['text' => 'üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –±–æ—Ç–æ–º'],],
        ], 
        'one_time_keyboard' => false,
        'resize_keyboard' => true,
    ];
    
    function createInvoice($user, $name, $description, $id, $price, $fulldesc = NULL) {
        $check = [
           0 => "üñ±", 1 => "üíé", 2 => "üõü", 3 => "üëë", 4 => "ü§é",
           5 => "üêº", 6 => "ü••", 7 => "üêä", 8 => "üç™", 9 => "ü´Å",
           10 => "üëì",
        ];
        if (array_search($check[$id], explode(" ", ($user -> added_emoji))) != NULL) {
            $keyboard = [
                'inline_keyboard' => [
                    [["text" => "‚Üê –ù–∞–∑–∞–¥", "callback_data" => "st.shop."]],
                ],
            ];
            sendMessage($user -> tg_id, "üí∂ –õ–∏–±–æ —Ç—ã –æ—à–∏–±—Å—è, –ª–∏–±–æ —Ç—ã –æ—á–µ–Ω—å —Ö–æ—á–µ—à—å –¥–∞—Ç—å –º–Ω–µ –¥–µ–Ω—å–≥–∏.\n\n***–¢—ã —É–∂–µ –∫—É–ø–∏–ª –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä!***", json_encode($keyboard));
            return;
        }
        
        $shopId = '308789';
        $secretKey = "live_IVPRE1d8W2ughJxrdRl6-tYDV0r7XCIe9JAHWnuLDk0";
        
        $apiUrl = 'https://api.yookassa.ru/v3/payments';
        $amount = [
            'value' => $price,
            'currency' => 'RUB',
        ];
        $confirmation = [
            'type' => 'redirect',
            'return_url' => 'https://t.me/meshdnevnik_bot',
        ];
        $desc = $description;
        $description = $description." –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ".$user -> tg_id.".";
        $data = [
            'amount' => $amount,
            'capture' => true,
            'confirmation' => $confirmation,
            'description' => $description,
            'receipt' => [
                'customer' => [], 
                'items' => [
                    ['description' => $description,
                    'amount' => $amount,
                    'vat_code' => 1,
                    'quantity' => 1]]], 
            'merchant_customer_id' => $user -> tg_id.'.'.$id.'.',
        ];
        if (isset($user -> email)) $data['receipt']['customer']['email'] = $user -> email;
        elseif (isset($user -> phone)) $data['receipt']['customer']['phone'] = $user -> phone;
        else {
            $message = "üêº –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –æ—á–µ–Ω—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ú–≠–®, –∏ —É –≤–∞—Å –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –Ω–µ–º—É –Ω–µ —Ç–µ–ª–µ—Ñ–æ–Ω, –Ω–µ —ç–ª. –ø–æ—á—Ç–∞. –¢–∞–∫ —á—Ç–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞ –º–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω!";
            $keyboard = [
                'keyboard' => [
                        [["text" => "üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", "request_contact" => true]],
                        [["text" => "‚Üê –ù–∞–∑–∞–¥"]],
                    ],
                    'resize_keyboard' => true,
                    
            ];
            sendMessage($user -> tg_id, $message, json_encode($keyboard));
            return;
        }
        $idempotenceKey = "l".md5 ( implode ( '|', [$data, date('l jS \of F Y h:i:s A')]) );
        $headers = [
            'Idempotence-Key: ' . $idempotenceKey,
            'Content-Type: application/json',
        ];
    
        $ch = curl_init($apiUrl);
        
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        curl_setopt($ch, CURLOPT_USERPWD, $shopId . ':' . $secretKey);
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
        
        $response = curl_exec($ch);
        
        if (curl_errno($ch)) {
            echo '–û—à–∏–±–∫–∞ cURL: ' . curl_error($ch);
        }
        
        curl_close($ch);
        
        $data = json_decode($response, true);
        
        $keyboard = [
            'inline_keyboard' => [
                [['text' => 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', 'url' => $data['confirmation']['confirmation_url']],],
            ],
        ];
        
        if ($fulldesc != NULL) {
            $desc = $fulldesc;
        }
        sendMessage($user -> tg_id, "üí• $name\nüîπ $desc\n\nüí∞ –¶–µ–Ω–∞: ***$price"."‚ÇΩ***", json_encode($keyboard));
    }

    function SubErase($string, $start_in, $end_in) {
        $start = strpos($string, $start_in);
        if ($start !== false) {
            $start += strlen($start_in);
            
            $end = strpos($string, $end_in, $start);
            
            if ($end !== false) {
                $substring = substr($string, $start, $end - $start);
                return $substring;
            } else {
                return "–°—Ç—Ä–æ–∫–∞ ' –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º:' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.";
            }
        } else {
            return "–°—Ç—Ä–æ–∫–∞ 'chat id: ' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.";
        }
        return $str;
    }
    
    function checkName($str) {
        $out = "";
        $spec = [
            "_" => true,
            "`" => true,
            "*" => true,
            "|" => true,
            "^" => true,
        ];
        for ($i = 0; $i < strlen($str); $i++) {
            if ($spec[$str[$i]]) {
                $message .= "\\";
            }
            $message .= $str[$i];
        }
        return $message;
    }
    
    // –ü–æ–ª—É—á–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
    $update = json_decode(file_get_contents('php://input'), true);
    R::setup( 'mysql:host=localhost;dbname=u1706092_accountpp',
        'u1706092_default', '03CAL1bI8ybTqhA7' );
        
        
    $chatId = $update['message']['from']['id'];
    $usrId = $update['callback_query']['message']['chat']['id'];
    if (R::findOne('meshbotparents', 'tg_id = ?', array($usrId))) {
        $url = "https://vorg.site/meshdnevnik_bot/parent/webhook.php";
        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HEADER, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($update));
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
            "content-type application/json",
        ));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $result2 = json_decode(curl_exec($ch), true);
        return;
    }
    if (R::findOne('meshbotparents', 'tg_id = ?', array($chatId))) {
        $url = "https://vorg.site/meshdnevnik_bot/parent/webhook.php";
        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HEADER, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($update));
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
            "content-type application/json",
        ));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $result2 = json_decode(curl_exec($ch), true);
        return;
    }
        
    if (isset($update['message']['successful_payment'])) {
        $chatId = $update['message']['from']['id'];
        $user = R::findOne('meshbotusers', 'tg_id = ?', array($chatId));
        if ($user) {
            $shop = [
               "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫ \"–¢–µ—Ö–Ω–∏–∫–∞\"" => " ‚åöÔ∏è üì± üñ• üñ± üíΩ üìÄ üéû ‚òéÔ∏è  üì∫ üì† üìΩ ‚è∞",
               "Darkshop –°–ú–ê–ô–õ–û–í" => " üíé üí£ üõ° üîÆ ü§Ø ü•∂ üò∂‚Äçüå´  ‚òòÔ∏è üå≥ üçÄ üçÑ üåù üåö",
               "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫ \"–¢—É—Ä–∏–∑–º\"" => " üõü üö¢ üé¢ üé° üèü ‚õ± üóΩ ‚õ∫Ô∏è  üó∫",
               "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫ \"–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π\"" => " üëë ü´Ö ü§¥üèø üßúüèª‚Äç‚ôÇÔ∏è ü™§ üí∏",
               "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫ \"–°–µ—Ä–¥—Ü–∞\"" => " ü©∑ ‚ù§Ô∏è üß° üíõ üíö ü©µ üíô üíú üñ§ ü©∂ ü§ç ü§é ‚ù§Ô∏è‚Äçüî• üíï",
            ];
            sendMessage($chatId, "üõí ***–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!***\n\n–ú—ã –≤—ã–¥–∞–ª–∏ –≤–∞–º ".SubErase($update['message']['successful_payment']['invoice_payload']."|", '.', "|")." —Å—Ç–æ–∏–º–æ—Å—Ç—å—é ".
            ($update['message']['successful_payment']['total_amount'] / 100). "RUB!", $keyboard);
            $user -> added_emoji .= $shop[SubErase($update['message']['successful_payment']['invoice_payload']."|", '.', "|")];
            R::store($user);
        }
    }
    if (isset($update['pre_checkout_query'])) {
        $chatId = $update['pre_checkout_query']['from']['id'];
        $shop = [
           "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫ \"–¢–µ—Ö–Ω–∏–∫–∞\"" => "‚è∞",
           "Darkshop –°–ú–ê–ô–õ–û–í" => "üíé",
           "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫ \"–¢—É—Ä–∏–∑–º\"" => "üõü",
           "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫ \"–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π\"" => "üëë",
           "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫ \"–°–µ—Ä–¥—Ü–∞\"" => "ü©∑",
        ];
        if (R::findOne('meshbotusers', 'tg_id = ?', array($chatId))) {
            if (array_search($shop[SubErase($update['pre_checkout_query']['invoice_payload']."|", '.', "|")], explode(" ", (R::findOne('meshbotusers', 'tg_id = ?', array($chatId)) -> added_emoji))) != NULL) {
                answerPreCheckoutQuery($update['pre_checkout_query']['id'], false, "\nüí∂ –õ–∏–±–æ —Ç—ã –æ—à–∏–±—Å—è, –ª–∏–±–æ —Ç—ã –æ—á–µ–Ω—å —Ö–æ—á–µ—à—å –¥–∞—Ç—å –º–Ω–µ –¥–µ–Ω—å–≥–∏.\n\n–¢—ã —É–∂–µ –∫—É–ø–∏–ª –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä");
                return;
            }
            answerPreCheckoutQuery($update['pre_checkout_query']['id'], true);
        }
        else {
            answerPreCheckoutQuery($update['pre_checkout_query']['id'], false);
        }
        return;
    }    
    if (isset($update['callback_query'])) {
        $chatId = $update['callback_query']['message']['chat']['id'];
        
        if (R::findOne('meshbotusers', 'tg_id = ?', array($chatId))) {
            $callback_data = $update['callback_query']['data'];
            if (str_contains($callback_data, "dz.")) {
                $object = SubErase($callback_data, "dz.", ".");
                $today = new DateTime();
                $today->modify('+1 day');
                $tomorrow = $today->format('Y-m-d');
                if ($object == "nextday") {
                    $dateString = SubErase($callback_data, "nextday.", "|");
                    $today = DateTime::createFromFormat('Y-m-d', $dateString);
                    $today->modify('+1 day');
                    $tomorrow = $today->format('Y-m-d');
                    //sendMessage($chatId, "https://vorg.site/meshdnevnik\_bot/dz.php?chid=".$chatId."&date=$tomorrow&mid=".$update['callback_query']['message']['message_id'], null);
                    file_get_contents("https://vorg.site/meshdnevnik_bot/dz.php?chid=".$chatId."&date=$tomorrow&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "prevday") {
                    $dateString = SubErase($callback_data, "prevday.", "|");
                    $today = DateTime::createFromFormat('Y-m-d', $dateString);
                    $today->modify('-1 day');
                    $day = $today->format('Y-m-d');
                    if ($day == $tomorrow) {
                        $object = "tommorow";
                    }
                    else {
                        file_get_contents("https://vorg.site/meshdnevnik_bot/dz.php?chid=".$chatId."&date=$day&mid=".$update['callback_query']['message']['message_id']);
                    }
                }
                if ($object == "tommorow") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/dz.php?chid=".$chatId."&date=next&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "today") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/dz.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
            }
            if (str_contains($callback_data, "sc.")) {
                $object = SubErase($callback_data, "sc.", ".");
                file_get_contents("https://vorg.site/meshdnevnik_bot/Schedule.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']."&date=".$object);
            }
            if (str_contains($callback_data, "mr.")) {
                $object = SubErase($callback_data, "mr.", ".");
                if ($object == "nextday") {
                    $dateString = SubErase($callback_data, "nextday.", "|");
                    $today = DateTime::createFromFormat('Y-m-d', $dateString);
                    $today->modify('+1 day');
                    $tomorrow = $today->format('Y-m-d');
                    file_get_contents("https://vorg.site/meshdnevnik_bot/marks.php?chid=".$chatId."&date=$tomorrow&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "prevday") {
                    $dateString = SubErase($callback_data, "prevday.", "|");
                    $today = DateTime::createFromFormat('Y-m-d', $dateString);
                    $today->modify('-1 day');
                    $day = $today->format('Y-m-d');
                    file_get_contents("https://vorg.site/meshdnevnik_bot/marks.php?chid=".$chatId."&date=$day&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "avg") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/marks_avg.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "predmets") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/predmet_marks.php?animation=1&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "predmetss") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/predmet_marks.php?animation=0&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "predmet") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/predmet_marks.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']."&pid=".SubErase($callback_data, "predmet.", "."));
                }
                if ($object == "days") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/marks.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
            }
            if (str_contains($callback_data, "mn.")) {
                $object = SubErase($callback_data, "mn.", ".");
                if ($object == "home") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/menu.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                    return;
                }
                file_get_contents("https://vorg.site/meshdnevnik_bot/menu.php?categ=$object&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
            }
            if (str_contains($callback_data, "rt.") && !str_contains($callback_data, "glrt.")) {
                $object = SubErase($callback_data, "rt.", ".");
                if ($object == "nonvisible") {
                    $object = "main";
                }
                if ($object == "visble") {
                    $object = "main";
                    $userr = R::findOne('meshbotusers', 'tg_id = ?', array($chatId));
                    $userr -> rating_visible = true;
                    R::store($userr);
                }
                if ($object == "full") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/rating_full.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                    return;
                }
                if ($object == "main" || $object == "short") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/rating.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                    return;
                }
                if ($object == "predmets") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/subject_rating.php?animation=1&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                    return;
                }
                if ($object == "subjects") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/subject_rating.php?animation=0&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                    return;
                }
                if ($object == "only_my_subjects") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/subject_rating.php?only=1&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                    return;
                }
                if ($object == "subject") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/subject_rating.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']."&pid=".SubErase($callback_data, "subject.", "."));
                }
                file_get_contents("https://vorg.site/meshdnevnik_bot/menu.php?categ=$object&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
            }
            if (str_contains($callback_data, "st.")) {
                $object = SubErase($callback_data, "st.", ".");
                //sendMessage($chatId, "https://vorg.site/meshdnevnik\_bot/settings.php?$object=1&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id'], null);
                file_get_contents("https://vorg.site/meshdnevnik_bot/settings.php?$object=1&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                return;
            }
            if (str_contains($callback_data, "glrt.")) {
                $object = SubErase($callback_data, "glrt.", ".");
                if ($object == "setupok") {
                    $userr = R::findOne('meshbotusers', 'tg_id = ?', array($chatId));
                    $name = $update['callback_query']['from']['first_name'];
                    if (isset($update['callback_query']['from']['last_name'])) $name .= " ".$update['callback_query']['from']['last_name'];
                    $userr -> in_global = true;
                    $userr -> name_global = checkName($name);
                    R::store($userr);
                    if ($userr -> global_ball < 100) {
                        $ball = file_get_contents("https://vorg.site/meshdnevnik_bot/get-global_ball.php?chid=".$userr -> tg_id);
                        if ((double)$ball > 0) {
                            $userr -> global_ball = (double)$ball;
                            R::store($userr);
                        }
                    }
                    file_get_contents("https://vorg.site/meshdnevnik_bot/globalrating.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "shown") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/globalrating.php?shown=1&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "base") {
                    //sendMessage("652001276", "https://vorg.site/meshdnevnik\_bot/globalrating.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id'], null);
                    file_get_contents("https://vorg.site/meshdnevnik_bot/globalrating.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                return;
            }
            if (str_contains($callback_data, "pt.")) {
                $object = SubErase($callback_data, "pt.", ".");
                if ($object == "diag") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/diagnostics.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "sport") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/sport.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                if ($object == "ol") {
                    file_get_contents("https://vorg.site/meshdnevnik_bot/olimp.php?chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                if (str_contains($object, "ol")) {
                    $object = SubErase($callback_data, "pt.ol", ".");
                    file_get_contents("https://vorg.site/meshdnevnik_bot/olimp.php?start=".$object."&chid=".$chatId."&mid=".$update['callback_query']['message']['message_id']);
                }
                return;
            }
            return;
        }
    }
    
    $replyToMessageId = $update['message']['reply_to_message']['message_id'];
    $replyToMessage = $update['message']['reply_to_message']['text'];
    if (isset($replyToMessageId) && $update['message']['reply_to_message']['from']['is_bot'] == "true") {
        if (isset($update['message']['contact']) && str_contains($replyToMessage, " —Ç–µ–ª–µ—Ñ–æ–Ω, –Ω–µ —ç–ª. –ø–æ—á—Ç–∞. –¢–∞–∫ —á—Ç–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞ –º–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω!")) {
            $chatId = $update['message']['chat']['id'];
            $userId = $update['message']['from']['id'];
            $messageId = $update['message']['message_id'];
            $user = R::findOne('meshbotusers', 'tg_id = ?', array($userId));
            $user -> phone = $update['message']['contact']['phone_number'];
            R::store($user);
            deleteMessage($userId, $messageId);
            deleteMessage($userId, $replyToMessageId);
            sendMessage($userId, "üëçüèΩ ***–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–ª–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫ –±–æ—Ç—É!***\n–ú–æ–∂–µ—Ç–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–∞–º!", json_encode($keyboard));
            return;
        }
        if (str_contains($replyToMessage, '–ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥, —Ç–æ —É–≤–∏–¥–µ—Ç–µ —Å–ª–µ–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞ - —Å–º–∞–π–ª–∏–∫! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±—ã–º –∏–∑ –Ω–∏–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã')) {
            $chatId = $update['message']['chat']['id'];
            $userId = $update['message']['from']['id'];
            $messageId = $update['message']['message_id'];
            $user = R::findOne('meshbotusers', 'tg_id = ?', array($userId));
            
            $messageText = $update['message']['text'];
            
            $str = " ";
            $str .= $user -> added_emoji;
            
            $smiles = explode(" ", $str);
            
            if (array_search($messageText, $smiles) != NULL) {
                deleteMessage($chatId, $messageId);
                $message = "___(–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã ".date("d.m.y H:i:s").")___\n\n–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Å–≤–æ–π —Å–º–∞–π–ª –Ω–∞ ".$messageText."!\n\n\n";
                $message .= "üòÅ –ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥, —Ç–æ —É–≤–∏–¥–µ—Ç–µ —Å–ª–µ–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞ - —Å–º–∞–π–ª–∏–∫! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±—ã–º –∏–∑ –Ω–∏–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö:\n\n***";
                $message .= $user -> added_emoji."***\n\n";
                $message .= "üëë –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–∞–π–ª–∏–∫–∏, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ***\"üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ\"*** –∏–ª–∏ ***\"üõç –ú–∞–≥–∞–∑–∏–Ω\"*** –Ω–∏–∂–µ!";
                $keyboard = [
                  "inline_keyboard" => [
                      [["text" => "üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", "callback_data" => "st.vipsmiles."]],
                      [["text" => "üõç –ú–∞–≥–∞–∑–∏–Ω", "callback_data" => "st.shop."]],
                      [["text" => "‚Üê –ù–∞–∑–∞–¥", "callback_data" => "st.rating."]],
                    ],  
                ];
                $user -> rating_smile = $messageText;
                R::store($user);
                editMessage($chatId, $replyToMessageId, $message, json_encode($keyboard));
                sendMessage($userId, ($messageText), null);
                return;
            }
            else if ($messageText == "üëΩ") {
                deleteMessage($chatId, $messageId);
                $message = "___(–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã ".date("d.m.y H:i:s").")___\n\n–ù—É –∏ –ª—é–±–∏—à—å —Ç—ã —Å–µ–∫—Ä–µ—Ç—ã, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º —Å–º–∞–π–ª–æ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Å–≤–æ–π —Å–º–∞–π–ª –Ω–∞ ".$messageText."!\n\n\n";
                $message .= "üòÅ –ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥, —Ç–æ —É–≤–∏–¥–µ—Ç–µ —Å–ª–µ–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞ - —Å–º–∞–π–ª–∏–∫! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±—ã–º –∏–∑ –Ω–∏–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö:\n\n***";
                $message .= "üëΩ ".$user -> added_emoji."***\n\n";
                $message .= "üëë –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–∞–π–ª–∏–∫–∏, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ***\"üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ\"*** –∏–ª–∏ ***\"üõç –ú–∞–≥–∞–∑–∏–Ω\"*** –Ω–∏–∂–µ!";
                $keyboard = [
                  "inline_keyboard" => [
                      [["text" => "üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", "callback_data" => "st.vipsmiles."]],
                      [["text" => "üõç –ú–∞–≥–∞–∑–∏–Ω", "callback_data" => "st.shop."]],
                      [["text" => "‚Üê –ù–∞–∑–∞–¥", "callback_data" => "st.rating."]],
                    ],  
                ];
                $user -> added_emoji .= " üëΩ";
                $user -> rating_smile = $messageText;
                R::store($user);
                editMessage($chatId, $replyToMessageId, $message, json_encode($keyboard));
                sendMessage($userId, ($messageText), null);
                return;
            }
            else if ($messageText == "üòª") {
                deleteMessage($chatId, $messageId);
                $message = "___(–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã ".date("d.m.y H:i:s").")___\n\n–ù—É –∏ –ª—é–±–∏—à—å —Ç—ã —Å–µ–∫—Ä–µ—Ç—ã, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º —Å–º–∞–π–ª–æ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Å–≤–æ–π —Å–º–∞–π–ª –Ω–∞ ".$messageText."!\n\n\n";
                $message .= "üòÅ –ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥, —Ç–æ —É–≤–∏–¥–µ—Ç–µ —Å–ª–µ–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞ - —Å–º–∞–π–ª–∏–∫! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±—ã–º –∏–∑ –Ω–∏–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö:\n\n***";
                $message .= "üòª ".$user -> added_emoji."***\n\n";
                $message .= "üëë –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–∞–π–ª–∏–∫–∏, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ***\"üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ\"*** –∏–ª–∏ ***\"üõç –ú–∞–≥–∞–∑–∏–Ω\"*** –Ω–∏–∂–µ!";
                $keyboard = [
                  "inline_keyboard" => [
                      [["text" => "üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", "callback_data" => "st.vipsmiles."]],
                      [["text" => "üõç –ú–∞–≥–∞–∑–∏–Ω", "callback_data" => "st.shop."]],
                      [["text" => "‚Üê –ù–∞–∑–∞–¥", "callback_data" => "st.rating."]],
                    ],  
                ];
                $user -> added_emoji .= " üòª";
                $user -> rating_smile = $messageText;
                R::store($user);
                editMessage($chatId, $replyToMessageId, $message, json_encode($keyboard));
                sendMessage($userId, ($messageText), null);
                return;
            }
            else if ($messageText == "üò¥") {
                deleteMessage($chatId, $messageId);
                $message = "___(–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã ".date("d.m.y H:i:s").")___\n\n–ù—É –∏ –ª—é–±–∏—à—å —Ç—ã —Å–µ–∫—Ä–µ—Ç—ã, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º —Å–º–∞–π–ª–æ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Å–≤–æ–π —Å–º–∞–π–ª –Ω–∞ ".$messageText."!\n\n\n";
                $message .= "üòÅ –ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥, —Ç–æ —É–≤–∏–¥–µ—Ç–µ —Å–ª–µ–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞ - —Å–º–∞–π–ª–∏–∫! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±—ã–º –∏–∑ –Ω–∏–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö:\n\n***";
                $message .= "üò¥ ".$user -> added_emoji."***\n\n";
                $message .= "üëë –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–∞–π–ª–∏–∫–∏, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ***\"üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ\"*** –∏–ª–∏ ***\"üõç –ú–∞–≥–∞–∑–∏–Ω\"*** –Ω–∏–∂–µ!";
                $keyboard = [
                  "inline_keyboard" => [
                      [["text" => "üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", "callback_data" => "st.vipsmiles."]],
                      [["text" => "üõç –ú–∞–≥–∞–∑–∏–Ω", "callback_data" => "st.shop."]],
                      [["text" => "‚Üê –ù–∞–∑–∞–¥", "callback_data" => "st.rating."]],
                    ],  
                ];
                $user -> added_emoji .= " üò¥";
                $user -> rating_smile = $messageText;
                R::store($user);
                editMessage($chatId, $replyToMessageId, $message, json_encode($keyboard));
                sendMessage($userId, ($messageText), null);
                return;
            }
            else if ($messageText == "ü§ñ") {
                deleteMessage($chatId, $messageId);
                $message = "___(–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã ".date("d.m.y H:i:s").")___\n\n–ù—É –∏ –ª—é–±–∏—à—å —Ç—ã —Å–µ–∫—Ä–µ—Ç—ã, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º —Å–º–∞–π–ª–æ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Å–≤–æ–π —Å–º–∞–π–ª –Ω–∞ ".$messageText."!\n\n\n";
                $message .= "üòÅ –ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥, —Ç–æ —É–≤–∏–¥–µ—Ç–µ —Å–ª–µ–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞ - —Å–º–∞–π–ª–∏–∫! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±—ã–º –∏–∑ –Ω–∏–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö:\n\n***";
                $message .= "ü§ñ ".$user -> added_emoji."***\n\n";
                $message .= "üëë –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–∞–π–ª–∏–∫–∏, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ***\"üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ\"*** –∏–ª–∏ ***\"üõç –ú–∞–≥–∞–∑–∏–Ω\"*** –Ω–∏–∂–µ!";
                $keyboard = [
                  "inline_keyboard" => [
                      [["text" => "üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", "callback_data" => "st.vipsmiles."]],
                      [["text" => "üõç –ú–∞–≥–∞–∑–∏–Ω", "callback_data" => "st.shop."]],
                      [["text" => "‚Üê –ù–∞–∑–∞–¥", "callback_data" => "st.rating."]],
                    ],  
                ];
                $user -> added_emoji .= " ü§ñ";
                $user -> rating_smile = $messageText;
                R::store($user);
                editMessage($chatId, $replyToMessageId, $message, json_encode($keyboard));
                sendMessage($userId, ($messageText), null);
                return;
            }
            else {
                $message = "üòì –£–ø—Å... –ß—Ç–æ-—Ç–æ —è–≤–Ω–æ –ø–æ—à–ª–æ –Ω–µ –ø–æ –ø–ª–∞–Ω—É, –≤–∞–º –Ω–∞–¥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ***–¢–û–õ–¨–ö–û*** —Å–º–∞–π–ª–∏–∫ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ü—Ä–∏—ç—Ç–æ–º –æ–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–ø–∏—Å–∫–µ –Ω–∏–∂–µ!\n\n\n";
                $message .= "üòÅ –ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥, —Ç–æ —É–≤–∏–¥–µ—Ç–µ —Å–ª–µ–≤–∞ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞ - —Å–º–∞–π–ª–∏–∫! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±—ã–º –∏–∑ –Ω–∏–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö:\n\n***";
                $message .= $user -> added_emoji."***\n\n";
                $message .= "üëë –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–∞–π–ª–∏–∫–∏, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ***\"üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ\"*** –∏–ª–∏ ***\"üõç –ú–∞–≥–∞–∑–∏–Ω\"*** –Ω–∏–∂–µ!";
                $keyboard = [
                  "inline_keyboard" => [
                      [["text" => "üî• –ü—Ä–∏–≤–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", "callback_data" => "st.vipsmiles."]],
                      [["text" => "üõç –ú–∞–≥–∞–∑–∏–Ω", "callback_data" => "st.shop."]],
                      [["text" => "‚Üê –ù–∞–∑–∞–¥", "callback_data" => "st.rating."]],
                    ],  
                ];
                deleteMessage($chatId, $messageId);
                editMessage($chatId, $replyToMessageId, $message, json_encode($keyboard));
                return;
            }
        }
    }
        
    $chatId = $update['message']['chat']['id'];
    $userId = $update['message']['from']['id'];  
    $messageText = $update['message']['text'];
    
    if (str_contains($messageText, "/start ")) {
        if (str_contains($messageText, "/start uc")) {
            $object = SubErase($messageText, "/start uc", "000165");
            $object2 = SubErase($messageText."//fff5324%^b36$", "000165", "//fff5324%^b36$");
            file_get_contents("https://vorg.site/meshdnevnik_bot/dz.php?chid=".$chatId."&date=$object&cdz=1&g_k=".$object2);
            return;
        }
        $object = SubErase($messageText."//fff5324%^b36$", "/start ", "//fff5324%^b36$");
        if (!R::findOne('meshbotusers', 'tg_id = ?', array($userId))) {
            $create_keyboard = [
                'inline_keyboard' => [
                    [["text" => "–í–æ–π—Ç–∏ —Å –ú–≠–®", "url" => "https://vorg.site/meshdnevnik_bot/mesh_redirect.php?ref=".$object."&id=".$userId],],
                    [['text' => "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", "url" => "https://vorg.site/meshdnevnik_bot/privacy.pdf"],],
                    [['text' => "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", "url" => "https://vorg.site/meshdnevnik_bot/termofuse.pdf"],],
                ],
            ];
            if (str_contains($messageText, "promo")) {
                $_gSESSION['promo_id'] = $object;
                if (isset($_gSESSION['promo_id'])) {
                    $promo = R::findOne('meshbotpromo', 'promo_id = ?', array($_gSESSION['promo_id']));
                    if (isset($promo)) {
                        $promo -> countin++;
                        R::store($promo);
                    }
                }
                $create_keyboard['inline_keyboard'][0][0]["url"] = "https://vorg.site/meshdnevnik_bot/mesh_redirect.php?promo=".$object."&id=".$userId;
            }
            //sendMessage($chatId, $message, null);
            sendMessage($chatId, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ú–≠–® –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –ú–≠–® –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:", json_encode($create_keyboard));
            return;
        }
        $messageText = "/start";
    }
    if ($messageText == "‚Üê –ù–∞–∑–∞–¥") {
        deleteMessage($userId, $update['message']['message_id']);
    }
        
    if ($messageText == "/start" || $messageText == "‚Üê –ù–∞–∑–∞–¥") {
        if (!R::findOne('meshbotusers', 'tg_id = ?', array($userId))) {
            $create_keyboard = [
                'inline_keyboard' => [
                    [["text" => "–í–æ–π—Ç–∏ —Å –ú–≠–®", "url" => "https://vorg.site/meshdnevnik_bot/mesh_redirect.php?id=".$userId],],
                    [['text' => "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", "url" => "https://vorg.site/meshdnevnik_bot/privacy.pdf"],],
                    [['text' => "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", "url" => "https://vorg.site/meshdnevnik_bot/termofuse.pdf"],],
                ],
            ];
            sendMessage($chatId, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ú–≠–® –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –ú–≠–® –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:", json_encode($create_keyboard));
        }
        else {
            sendMessage($chatId, "–ü—Ä–∏–≤–µ—Ç. –ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?", json_encode($keyboard));
        }
        return;
    }
    
    if (R::findOne('meshbotusers', 'tg_id = ?', array($userId))) {
        if ($messageText == "üìó –ó–∞–¥–∞–Ω–∏—è" || $messageText == "/homeworks") {
            file_get_contents("https://vorg.site/meshdnevnik_bot/dz.php?chid=".$chatId);
            return;
        }
        if ($messageText == "üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ" || $messageText == "/schedule") {
            //sendMessage($chatId, "https://vorg.site/meshdnevnik\_bot/Schedule.php?chid=".$chatId, null);
            file_get_contents("https://vorg.site/meshdnevnik_bot/Schedule.php?chid=".$chatId);
            return;
        }
        if ($messageText == "üèÖ –û—Ü–µ–Ω–∫–∏" || $messageText == "/marks") {
            file_get_contents("https://vorg.site/meshdnevnik_bot/marks.php?chid=".$chatId);
            return;
        }
        if ($messageText == "ü•ò –ú–µ–Ω—é" || $messageText == "/menu") {
            file_get_contents("https://vorg.site/meshdnevnik_bot/menu.php?chid=".$chatId);
            return;
        }
        if ($messageText == "üìà –†–µ–π—Ç–∏–Ω–≥" || $messageText == "/rating") {
            file_get_contents("https://vorg.site/meshdnevnik_bot/rating.php?chid=".$chatId);
            return;
        }
        if ($messageText == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏" || $messageText == "/settings") {
            file_get_contents("https://vorg.site/meshdnevnik_bot/settings.php?main=1&chid=".$chatId);
            return;
        }
        if ($messageText == "üíæ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ" || $messageText == "/portfolio") {
            file_get_contents("https://vorg.site/meshdnevnik_bot/portfolio.php?chid=".$chatId);
            return;
        }
        if ($messageText == "ü´• –ü–æ–¥–¥–µ—Ä–∂–∫–∞" || $messageText == "/support") {
            file_get_contents("https://vorg.site/meshdnevnik_bot/support.php?chid=".$chatId);
            return;
        }
        if ($messageText == "üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –±–æ—Ç–æ–º" || $messageText == "/share") {
            $user = R::findOne('meshbotusers', 'tg_id = ?', array($userId));
            $message = "üîó ***–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏ –ø–æ–¥–∞—Ä–∫–∏:***\n\n";
            $message .= "üéâ –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ ***".(0 + ($user -> refs))."*** –¥—Ä—É–∑–µ–π!";
            if ($user -> refs < 5) {
                $message .= "\n\n–ü—Ä–∏–≥–ª–∞—Å–∏ –µ—â–µ ".(5 - ($user -> refs))." –¥—Ä—É–∑–µ–π –≤ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏ ***–ü–∞–∫ \"–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç\" (üö† üöÉ üöá üöÄÔ∏è)***";
                $message .= " —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞!";
            }
            $message .= "\n\n___(–ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ - –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–ª—é—á–∏–ª –ú–≠–® –∫ –±–æ—Ç—É)___";
            $message .= "\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: `https://t.me/meshdnevnik_bot?start=".$user -> tg_id."`";
            $keyboard = [
                'inline_keyboard' => [
                    [['text' => '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –±–æ—Ç–æ–º', 'url' => 'https://t.me/share/url?text=–ü–æ–ª—å–∑—É–π—Å—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º –¥–Ω–µ–≤–Ω–∏–∫–æ–º –ú–≠–® –≤–Ω—É—Ç—Ä–∏ Telegram!&url='.urlencode('https://t.me/meshdnevnik_bot?start='.$user -> tg_id)]]
                ]
            ];
            sendMessage($userId, $message, json_encode($keyboard));
            return;
        }
        if (str_contains($messageText, "darkshop") || str_contains($messageText, "darknet")) {
            file_get_contents("https://vorg.site/meshdnevnik_bot/darkshop.php?chid=".$chatId);
            return;
        }
        if (str_contains($messageText, "/banglobal")) {
            $object = SubErase($messageText."eyjyfjwx4cev56w^4", "/banglobal ", "eyjyfjwx4cev56w^4");
            file_get_contents("https://vorg.site/meshdnevnik_bot/banglobal.php?obj=".urlencode($object)."&chid=".$chatId);
            return;
        }
        if (str_contains($messageText, "testglobal")) {
            file_get_contents("https://vorg.site/meshdnevnik_bot/globalrating.php?chid=".$chatId);
            return;
        }
        if ($messageText == "/stat") {
            file_get_contents("https://vorg.site/meshdnevnik_bot/stat.php?chid=".$chatId);
            return;
        }
        if (array_search($messageText, explode(" ", " üöë üè• üßë‚Äçüî¨ ü´Ä ü´Å ü¶† ü©∫ üíä")) != NULL) {
            $user = R::findOne('meshbotusers', 'tg_id = ?', array($userId));
            createInvoice($user, "–ü–æ–∫—É–ø–∫–∞ –ü–∞–∫–∞ \"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π\"", "–ü–æ–∫—É–ø–∞–∫–∞ —Å–º–∞–π–ª–æ–≤ (üöë üè• üßë‚Äçüî¨ ü´Ä ü´Å ü¶† ü©∫ üíä).", 9, "15.00", "üöë –í–∏–∂—É, —á—Ç–æ —Ç—ã –±—É–¥—É—é—â–∏–π –º–µ–¥–∏–∫, –Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–∞–¥–æ –≤—Å–µ–≥–¥–∞ —Å –º–∞–ª–æ–≥–æ! –ö—É–ø–∏ –ø–∞–∫ –µ–º–æ–¥–∑–∏ –±–æ—Ç–∞ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º ***\"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π\"*** –∏ –ø–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–∏–º —ç–º–æ–¥–∑–∏:\nüöë üè• üßë‚Äçüî¨ ü´Ä ü´Å ü¶† ü©∫ üíä");
            return;
        }
        if ($messageText == "üëΩ") {
            sendMessage($chatId, "üëΩ –û, –≤–∏–∂—É —Ç—ã —É–≤–ª–µ–∫–∞–µ—à—å—Å—è –ø–∞—Ä–∞–Ω–æ–º–∞–ª—å–Ω—ã–º. –¢–æ–≥–¥–∞ —Ç–µ–±–µ –Ω–µ —Å–æ—Å—Ç–∞–≤–∏—Ç —Ç—Ä—É–¥–∞ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∏–∑—É—á–∏—Ç—å —á—Ç–æ-—Ç–æ –Ω–µ—Ä–µ–∞–ª—å–Ω–æ–µ: [—Ç—ã–∫](https://vorg.site/meshdnevnik_bot/notrickroll.php)", json_encode($keyboard));
            return;
        }
        if ($messageText == "Apple Vision Pro") {
            $user = R::findOne('meshbotusers', 'tg_id = ?', array($userId));
            createInvoice($user, "Apple Vision Pro (–î–æ–Ω–∞—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞)", "–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞. –ü–æ–∫—É–ø–∫–∞ —Å–º–∞–π–ª–∞ –æ—á–∫–æ–≤(\"üëì\") –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞.", 10, "100000.00", "–ü–æ–∫—É–ø–∞—è \"Apple Vision Pro\" –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ - –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ —Ç–æ, —á—Ç–æ –µ–≥–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ, –∞ –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø–æ–ª—É—á–∏—Ç–µ —Å–º–∞–π–ª –æ—á–∫–æ–≤ \"üëì\" –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ!");
            return;
        }
        if ($messageText == "ü•∂") {
            sendMessage($chatId, "ü•∂ –ï—Å–ª–∏ —Ç–µ–±–µ —Å–µ–π—á–∞—Å –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ, —Ç–æ –±—ã—Å—Ç—Ä–µ–µ –±–µ–≥–∏ –≤ —Ç–µ–ø–ª–æ–µ –º–µ—Å—Ç–æ. –≠—Ç–æ –≤–∞–∂–Ω–æ!\n\n–ê –≤–æ–æ–±—â–µ —è –∏—Å–∫—Ä–µ–Ω–Ω–µ –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —Ç—ã –ø–æ–±—ã–≤–∞–µ—à—å —Ç–∞–º:", null);
            sendLocation($chatId, 4.174972, 73.509688);
            return;
        }
        if (str_contains($messageText, "—Å–º–µ—Ä—Ç—å") || str_contains($messageText, "—Å—É–∏—Ü–∏–¥") || str_contains($messageText, "–º–Ω–µ –ø–ª–æ—Ö–æ") || str_contains($messageText, "–¥–µ–ø—Ä–µ—Å—Å–∏—è") || 
        str_contains($messageText, "–∑–∞—Å—Ç—Ä–µ–ª–∏—Ç—å—Å—è") || str_contains($messageText, "–ø–æ–≤–µ—Å–∏—Ç—å—Å—è") || str_contains($messageText, "–¥—É–º–∞—é –æ —Å–º–µ—Ä—Ç–∏")) {
            sendMessage($chatId, "üìû –ï—Å–ª–∏ –≤–∞–º –ø–ª–æ—Ö–æ - –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –≤ [–∞–Ω–æ–Ω–∏–º–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è](https://mtd-help.ru/), —Ç–∞–º –≤–∞–º –ø–æ–º–æ–≥—É—Ç!", json_encode($keyboard));
            return;
        }
        if (str_contains($messageText, "meshdnevnikbot") || str_contains($messageText, "mesh_tg_bot") || str_contains($messageText, "diary_school_bot") || str_contains($messageText, "OctoDiaryBot")) {
            deleteMessage($userId, $update['message']['message_id']);
            sendMessage($userId, "üò°", null);
            return;
        }
        if (str_contains($messageText, "meshdnevnik_bot")) {
            setMessageReaction($userId, $update['message']['message_id'], 'üëç');
            return;
        }
        if ($messageText == "testpayanyway") {
            //return;
            $keyboard = [
                "inline_keyboard" => [
                    [["text" => "–û–ø–ª–∞—Ç–∏—Ç—å", "web_app" => ["url" => "https://vorg.site/test/payanyway-sandbox/classicform.php"],],],  
                ],    
            ];
            sendMessage($userId, "Test payment", json_encode($keyboard));
            return;
        }
    }
    else {
        deleteMessage($userId, $update['message']['message_id']);
    }
    function sendMessage($chatId, $text, $keyboard, $photo = null) {
        $data = [
            'chat_id' => $chatId,
            'text' => $text,
            'parse_mode' => 'Markdown',
        ];
        if ($keyboard) {
            $data['reply_markup'] = $keyboard;
        }
        if ($photo) {
            $data = [
                'chat_id' => $chatId,
                'caption' => $text,
                'photo' => $photo,
                'parse_mode' => 'Markdown',
            ];
            if ($keyboard) {
                $data['reply_markup'] = $keyboard;
            }
            file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/sendPhoto?' . http_build_query($data));
            return;
        }
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/sendMessage?' . http_build_query($data));
    }
    
    function sendLocation($chatId, $latitude, $longitude) {
        $data = [
            'chat_id' => $chatId,
            'latitude' => $latitude,
            'longitude' => $longitude,
            'parse_mode' => 'Markdown',
        ];
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/sendLocation?' . http_build_query($data));
    }
    
    function deleteMessage($chatId, $message_id) {
        $data = [
            'chat_id' => $chatId,
            'message_id' => $message_id,
        ];
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/deleteMessage?' . http_build_query($data));
    }
    
    function setMessageReaction($chatId, $message_id, $reaction) {
        $data = [
            'chat_id' => $chatId,
            'message_id' => $message_id,
            'reaction' => json_encode([[
                "type" => "emoji",
                "emoji" => $reaction,
            ],]),
        ];
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/setMessageReaction?' . http_build_query($data)."&is_big=True");
    }
    
    
    function editMessage($chatId, $messageId, $text, $keyboard) {
        $data = [
            'chat_id' => $chatId,
            'message_id' => $messageId,
            'text' => $text,
            'parse_mode' => 'Markdown',
        ];
        if ($keyboard) {
            $data['reply_markup'] = $keyboard;
        }
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/editMessageText?' . http_build_query($data));
    }
    
    function answerPreCheckoutQuery($id, $ok, $er = null) {
        $data = [
            'pre_checkout_query_id' => $id,
            'ok' => $ok,
        ];
        if ($ok == false) {
            if ($er != null) {
                $data['error_message'] = $er;
            }
            else {
                $data['error_message'] = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
            }
        }
        file_get_contents('https://api.telegram.org/bot' . $GLOBALS['token'] . '/answerPreCheckoutQuery?' . http_build_query($data));
    }
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
?>